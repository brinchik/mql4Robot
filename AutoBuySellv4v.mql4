//+------------------------------------------------------------------+
//|                                                    BuySellStop.mq4|
//|                                  Copyright 2023, Example, Inc.    |
//|                                              https://example.com/ |
//+------------------------------------------------------------------+

// Входные параметры
// input double Take_BuyPrice = 1.10495;
// input double Buy_Price = 1.10495;
// input double Stop_BuyPrice = 1.10495;
// input double Stop_SellPrice = 1.10495;
// input double Sell_Price = 1.10495;
// input double Take_SellPrice = 1.10495;
input double slippage = 2;
input double lotsize = 0.1;

// Объявляем глобальные переменные
int MagicNumber = 003;

bool sellStopOrderSent0 = false;
bool buyStopOrderSent0 = false;

bool sellStopOrderSent = false;
bool buyStopOrderSent = false;

int stopLossHits = 0; // Количество закрытий позиции по стоп-лоссу

double StopLossDayH = 0;
double StopLossDayL = 0;

double lotss = 0;

bool hasPosition = false;

//+------------------------------------------------------------------+
input datetime MyDate = D'2022.01.10';
// Получение максимума и минимума конкретного дня
datetime date = MyDate;
double dayHigh = iHigh(_Symbol, PERIOD_D1, iBarShift(_Symbol, PERIOD_D1, date)); // получаем максимум за день
double dayLow = iLow(_Symbol, PERIOD_D1, iBarShift(_Symbol, PERIOD_D1, date));   // получаем минимум за день
//+------------------------------------------------------------------+



//+-------------------------Макс.Мин прошлого дня-----------------------------------------+
datetime last_candle_time;
datetime prev_day_start_time;

int last_candle_index;
int prev_day_index;
int prev_day_of_week;

double prevDayHight;
double prevDayLow;



double prevDayClose;
double prevDayOpen;

//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTrade()
{
    // for (int i = OrdersTotal() - 1; i >= 0; i--)
    // {
    //     if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
    //     {
    //         if (OrderType() == OP_BUY || OrderType() == OP_SELL)
    //         {
    //             if (OrderProfit() > 0)
    //             {
    //                 for (int j = OrdersTotal() - 1; j >= 0; j--)
    //                 {
    //                     if (OrderSelect(j, SELECT_BY_POS, MODE_TRADES))
    //                     {
    //                         if (OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP)
    //                         {
    //                             OrderDelete(OrderTicket());
    //                         }
    //                     }
    //                 }
    //             }
    //         }
    //     }
    // }
}

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+

void OnTick()
{

 datetime currentTime = TimeCurrent();





int ticket;
if (TimeHour(currentTime) == 23 && TimeMinute(currentTime) == 55 && hasPosition)
    {
double current_priceB = MarketInfo(Symbol(), MODE_BID);
double current_priceA = MarketInfo(Symbol(), MODE_ASK);
    for(int ci = OrdersTotal() - 1; ci >= 0; ci--)
    {
        if(OrderSelect(ci, SELECT_BY_POS, MODE_TRADES))
        {
            if(OrderSymbol() == _Symbol) // Убедитесь, что это сделка для текущего символа
            {
                if(OrderType() == OP_BUY || OrderType() == OP_SELL)
                {
                    bool closedA = OrderClose(OrderTicket(), OrderLots(), current_priceA, 10, clrRed);
                    bool closedB = OrderClose(OrderTicket(), OrderLots(), current_priceB, 10, clrRed);
                     stopLossHits = 0;
                    if(closedA || closedB)
                    {
                        Print("Trade closed successfully!");
                    }
                    else
                    {
                        Print("Failed to close trade! Error code: ", GetLastError());
                    }
                }
            }
        }
    }
}









    //+-------------------------Макс.Мин прошлого дня-----------------------------------------+
    // Получаем текущее время
  
    datetime currentTimeStartTrade = TimeLocal(); //? if (TimeHour(currentTimeStartTrade) == 0 && TimeMinute(currentTimeStartTrade) == 30)
    // Получаем время последней свечи
    last_candle_time = Time[0];

    // Получаем время начала предыдущего торгового дня
    prev_day_start_time = iTime(_Symbol, PERIOD_D1, 1);
    prev_day_of_week = TimeDayOfWeek(prev_day_start_time);
    while (prev_day_of_week == 0 || prev_day_of_week == 6)
    {
        // Если предыдущий день выходной, уменьшаем дату на один день
        prev_day_start_time -= PeriodSeconds(PERIOD_D1);
        prev_day_of_week = TimeDayOfWeek(prev_day_start_time);
    }

    // Если текущее время равно 23:55, обновляем переменные prevDayHight и prevDayLow
    if (!hasPosition){
    if (TimeHour(currentTime) == 00 && TimeMinute(currentTime) == 15)
    {
        // Получаем индекс последней свечи на дневном графике
        last_candle_index = iBarShift(_Symbol, PERIOD_D1, last_candle_time);

        // Получаем индекс свечи предыдущего дня на дневном графике
        prev_day_index = iBarShift(_Symbol, PERIOD_D1, prev_day_start_time);

        // Получаем максимум и минимум предыдущего дня
        prevDayHight = iHigh(_Symbol, PERIOD_D1, prev_day_index);
        prevDayLow = iLow(_Symbol, PERIOD_D1, prev_day_index);
    }
}

prevDayClose = iClose(_Symbol, PERIOD_D1, 1);
prevDayOpen = iOpen(_Symbol, PERIOD_D1, 1);
    //+------------------------------------------------------------------+

    // Проверяем, есть ли уже открытая позиция
    int ordersTotal = OrdersTotal();
    for (int i = 0; i < ordersTotal; i++)
    {
        // Получаем информацию об открытом ордере
        if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
        {
            // Проверяем, является ли ордер открытой позицией (не является ли он отложенным ордером)
            if (OrderType() == OP_BUY || OrderType() == OP_SELL)
            {
                hasPosition = true;
                break;
            }
            else
            {
                hasPosition = false;
            }
        }
    }

    
    // if (prevDayHight - prevDayLow < 450 * _Point) 

    if (TimeHour(currentTime) == 00 && TimeMinute(currentTime) == 30 && !hasPosition)
    {
        //+-------------------------Запуск торгов-----------------------------------------+
        if (prevDayClose > prevDayOpen && !buyStopOrderSent0)
        {
            bool result0 = OrderSend(Symbol(), OP_BUYSTOP, lotsize, prevDayHight + 50 * Point, 3, prevDayHight + 50 * Point - 200 * Point, prevDayHight + 50 * Point + 120 * Point, "my comment", 2222); // Отправляем ордер на торговый сервер 
            buyStopOrderSent0 = true;
        }
        if (prevDayClose < prevDayOpen && !sellStopOrderSent0)
        {
            bool result00 = OrderSend(Symbol(), OP_SELLSTOP, lotsize, prevDayLow - 50 * Point, 3, prevDayLow - 50 * Point + 200 * Point, prevDayLow - 50 * Point - 120 * Point, "my comment", 3333); // Отправляем ордер на торговый сервер
            sellStopOrderSent0 = true;
        }
    }
// }
    //+-------------------------Удаление противоположного ордера при активации первого-----------------------------------------+
    for (int q = 0; q < OrdersTotal(); q++)
    {
        if (OrderSelect(q, SELECT_BY_POS, MODE_TRADES))
        {
            if (OrderType() == OP_BUY && OrderMagicNumber() == 2222)
            {
                // Удалить sellstop по магическому номеру 2222
                for (int q1 = OrdersTotal() - 1; q1 >= 0; q1--)
                {
                    if (OrderSelect(q1, SELECT_BY_POS, MODE_TRADES))
                    {
                        if (OrderType() == OP_SELLSTOP && OrderMagicNumber() == 3333)
                        {
                            if (OrderDelete(OrderTicket()))
                            {
                                Print("Успешно удален ордер ", OrderTicket());
                            }
                            else
                            {
                                Print("Ошибка при удалении ордера ", OrderTicket());
                            }
                            break;
                        }
                    }
                }
            }
            else if (OrderType() == OP_SELL && OrderMagicNumber() == 3333)
            {
                // Удалить buystop по магическому номеру 3333
                for (int q2 = OrdersTotal() - 1; q2 >= 0; q2--)
                {
                    if (OrderSelect(q2, SELECT_BY_POS, MODE_TRADES))
                    {
                        if (OrderType() == OP_BUYSTOP && OrderMagicNumber() == 2222)
                        {
                            if (OrderDelete(OrderTicket()))
                            {
                                Print("Успешно удален ордер ", OrderTicket());
                            }
                            else
                            {
                                Print("Ошибка при удалении ордера ", OrderTicket());
                            }
                            break;
                        }
                    }
                }
            }
        }
    }

    double orderOpenPrice = OrderOpenPrice();
    double orderProfit = OrderProfit();
    double orderStopLoss = OrderStopLoss();
    double orderTakeProfit = OrderTakeProfit();

    if (OrdersTotal() > 0)
    {
        if (OrderType() == OP_SELL || OrderType() == OP_BUY)
        {
            if (orderProfit < 0 && MathAbs(orderProfit) >= MathAbs(orderOpenPrice - orderStopLoss))

            {
                stopLossHits++;
            }
            else
            {
                stopLossHits++;
            }
        }
    }
   //+------------------------------Действия при стоплосах------------------------------------+
   if (stopLossHits >= 1)
    {
        // StopLossDayH = +200;
        lotss = +0.1;
    }
   if (stopLossHits >= 2)
    {
        // StopLossDayH = +200;
        lotss = +0.3;
    }
    if (stopLossHits >= 3)
    {
        // StopLossDayH = +200;
        lotss = +0.7;
    }
    if (stopLossHits >= 4)
    {
        // StopLossDayH = +400;
        lotss = +1.5;
    }
    if (stopLossHits >= 5)
    {
        // StopLossDayH = +600;
        lotss = +3.1;
       
    }
    if (stopLossHits >= 6)
    {
        // StopLossDayH = +650;
        lotss = +6.3;
    }
    if (stopLossHits >= 7)
    {
        // StopLossDayH = +700;
        lotss = +12.7;
    }

    // +------------------------------------------------------------------+
    //+------------------------------Ордера дневного максимума------------------------------------+
    // Если нет открытой позиции и была открыта позиция на покупку, выставляем отложенный ордер на продажу
    //  if(hasPosition && OrderType() == OP_BUY)
    if (hasPosition && OrderType() == OP_BUY && OrderMagicNumber() == 2222)
    {
        if (!sellStopOrderSent)
        {
            bool result1 = OrderSend(Symbol(), OP_SELLSTOP, lotsize + lotss, prevDayHight + 50 * Point - 200 * Point, 3, prevDayHight + 50 * Point, prevDayHight + 50 * Point - 200 * Point - 120 * Point - StopLossDayH * Point, "my comment", 1111); // Отправляем ордер на торговый сервер
            sellStopOrderSent = true;
        }
    }
    if (hasPosition && OrderType() == OP_SELL && OrderMagicNumber() == 1111)
    {
        if (!buyStopOrderSent)
        {
            bool result = OrderSend(Symbol(), OP_BUYSTOP, lotsize + lotss, prevDayHight + 50 * Point, 3, prevDayHight + 50 * Point - 200 * Point, prevDayHight + 50 * Point + 120 * Point + StopLossDayH * Point, "my comment", 2222); // Отправляем ордер на торговый сервер
            buyStopOrderSent = true;
        }
    }

    //+------------------------------Ордера дневного минимума------------------------------------+
    // Если нет открытой позиции и была открыта позиция на покупку, выставляем отложенный ордер на продажу
    //  if(!hasPosition && OrderType() == OP_BUY)
    if (hasPosition && OrderType() == OP_BUY && OrderMagicNumber() == 4444)
    {
        if (!sellStopOrderSent)
        {
            bool result2 = OrderSend(Symbol(), OP_SELLSTOP, lotsize + lotss, prevDayLow - 50 * Point, 3, prevDayLow - 50 * Point + 200 * Point, prevDayLow - 50 * Point - 120 * Point - StopLossDayH * Point, "my comment", 3333); // Отправляем ордер на торговый сервер
            sellStopOrderSent = true;
        }
    }
    if (hasPosition && OrderType() == OP_SELL && OrderMagicNumber() == 3333)
    {
        if (!buyStopOrderSent)
        {
            bool result3 = OrderSend(Symbol(), OP_BUYSTOP, lotsize + lotss, prevDayLow - 50 * Point + 200 * Point, 3, prevDayLow - 50 * Point, prevDayLow - 50 * Point + 200 * Point + 120 * Point + StopLossDayH * Point, "my comment", 4444); // Отправляем ордер на торговый сервер
            buyStopOrderSent = true;
        }
    }

    if (hasPosition)
    {
        if (sellStopOrderSent || buyStopOrderSent)
        {
            sellStopOrderSent = false;
            buyStopOrderSent = false;
        }
    }
    // +------------------------------------------------------------------+

 


    if (!hasPosition)
    {
        int ordersTotal1 = OrdersTotal();
        int ordersTotal2 = OrdersHistoryTotal();

        // for (int cl1 = ordersTotal2 - 1; cl1 >= 0; cl1--)
        // {
        //     if (OrderSelect(cl1, SELECT_BY_POS, MODE_HISTORY))
        //     {
        //         if (OrderType() == OP_BUY || OrderType() == OP_SELL)
        //         {
        //             if (OrderCloseTime() > 0 && OrderProfit() >= OrderTakeProfit())
        //             {
        //                 for (int cl2 = ordersTotal1 - 1; cl2 >= 0; cl2--)
        //                 {
        //                     if (OrderSelect(cl2, SELECT_BY_POS, MODE_TRADES))
        //                     {
        //                         if (OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP ||
        //                             OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT)
        //                         {
        //                             OrderDelete(OrderTicket());
        //                             buyStopOrderSent0 = false;
        //                             sellStopOrderSent0 = false;
        //                         }
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }
   




datetime lastCloseTime = 0;
for (int cl1 = ordersTotal2 - 1; cl1 >= 0; cl1--) {
    if (OrderSelect(cl1, SELECT_BY_POS, MODE_HISTORY)) {
        if (OrderCloseTime() > lastCloseTime && OrderType() == OP_BUY || OrderType() == OP_SELL) {
            lastCloseTime = OrderCloseTime();
            if (OrderProfit() >= OrderTakeProfit() && TimeDayOfYear(OrderCloseTime()) == TimeDayOfYear(TimeCurrent())) {
                for (int cl2 = ordersTotal1 - 1; cl2 >= 0; cl2--) {
                    if (OrderSelect(cl2, SELECT_BY_POS, MODE_TRADES)) {
                        if (OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP || OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT) {
                            OrderDelete(OrderTicket());
                             buyStopOrderSent0 = false;
                                    sellStopOrderSent0 = false;
                                    stopLossHits = 0;
                        }
                    }
                }
            }
        }
    }
}
 }

datetime curDay = iTime(_Symbol, PERIOD_D1, 0); // время начала текущего дня
datetime lastBarClose = Time[0]; // время закрытия бара текущего дня

for (int cl3 = ordersTotal2 - 1; cl3 >= 0; cl3--)
{
    if (OrderSelect(cl3, SELECT_BY_POS, MODE_HISTORY))
    {
        if (OrderType() == OP_BUY || OrderType() == OP_SELL)
        {
            if (OrderCloseTime() >= curDay) // проверка, что сделка закрыта в текущем дне
            {
                for (int cl4 = ordersTotal1 - 1; cl4 >= 0; cl4--)
                {
                    if (OrderSelect(cl4, SELECT_BY_POS, MODE_TRADES))
                    {
                        if (OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP ||
                            OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT)
                        {
                            if (OrderOpenTime() < curDay && lastBarClose > curDay) // проверка, что ордер не сработал к концу дня
                            {
                                OrderDelete(OrderTicket());
                                buyStopOrderSent0 = false;
                                    sellStopOrderSent0 = false;
                                  
                            }
                        }
                    }
                }
            }
        }
    }
}


                for (int cl5 = ordersTotal1 - 1; cl5 >= 0; cl5--)
                {
                    if (OrderSelect(cl5, SELECT_BY_POS, MODE_TRADES))
                    {
                        if (OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP ||
                            OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT)
                        {
                            if (OrderOpenTime() < curDay && lastBarClose > curDay) // проверка, что ордер не сработал к концу дня
                            {
                                OrderDelete(OrderTicket());
                                buyStopOrderSent0 = false;
                                    sellStopOrderSent0 = false;
                                  
                            }
                        }
                    }
                }








    // // Получить магический номер текущей позиции. Делал для вывода в комент
    // for (int mi = 0; mi < OrdersTotal(); mi++)
    // {
    //     if (OrderSelect(mi, SELECT_BY_POS, MODE_TRADES))
    //     {
    //         if (OrderType() == OP_BUY || OrderType() == OP_SELL)
    //         {                                         // проверяем тип открытой позиции
    //             int magicNumber = OrderMagicNumber(); // получаем магический номер открытой позиции
    //             Print("Magic number of first open BUY position: ", magicNumber);
    //             // выходим из цикла после получения магического номера первой найденной позиции
    //         }
    //         break;
    //     }
    // }

    Comment("Stop loss hits: ", stopLossHits, " StopLossDayH: ", StopLossDayH, " hasPosition: ", hasPosition);
}
// , " magicNumber: ", magicNumber
// Выводим значение переменной на график
//  Comment("Magic number: " + stopLossHits);

// Получить магический номер текущей позиции. Делал для вывода в комент
//   if (OrderType() == OP_BUY || OrderType() == OP_SELL) { // проверяем тип открытой позиции
//     int magicNumber = OrderMagicNumber(); // получаем магический номер открытой позиции
//     Print("Magic number of first open BUY position: ", magicNumber);
//     break; // выходим из цикла после получения магического номера первой найденной позиции
// }
