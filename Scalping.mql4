int MagicNumber;
double lotSize = 0.01;
double bar1High, bar1Low, tpbuy;
bool sellStopOrderSent = false, buyStopOrderSent = false,hasPosition;
double b1;
double b2;
double b3;
double b4;
void OnChartEvent(const int id, const long &lparam, const double &dparam, const string &sparam)
{
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "BuyBtn")
   {
            bar1High = NormalizeDouble(iHigh(Symbol(), Period(), 1), 5);
            bar1Low = NormalizeDouble(iLow(Symbol(), Period(), 1), 5);

b1 = Ask;
b2 = bar1Low;
b3 = Ask - bar1Low;
b4 = 12 + (b3 * 3) / Point;
            // bool buyMarket1 = OrderSend(Symbol(), OP_BUY, lotSize, Ask, 3, bar1Low, 0, "comment", 11);
            // bool buyMarket1 = OrderSend(Symbol(), OP_BUY, lotSize, Ask, 3, bar1Low, NormalizeDouble(bar1Low + 3 * (Ask - bar1Low), 5), "comment", 11);

            
            bool buyMarket1 = OrderSend(Symbol(), OP_BUY, lotSize, Ask, 0, bar1Low, Ask + b4 * Point, "comment", 11);





            if (buyMarket1)
            {
                sellStopOrderSent = false;
                buyStopOrderSent = false;
            }
            else
            {}
         
        }
        if(id == CHARTEVENT_OBJECT_CLICK && sparam == "SellBtn")
        {
            bar1High = NormalizeDouble(iHigh(Symbol(), Period(), 1), 5);
            bar1Low = NormalizeDouble(iLow(Symbol(), Period(), 1), 5);

            b1 = Bid;
b2 = bar1High;
b3 = bar1High - Bid;
b4 = 12 + (b3 * 3) / Point;
            // bool sell1 = OrderSend(Symbol(), OP_SELL, lotSize, Bid, 3, bar1High, 0, "comment", 22);
            bool sell1 = OrderSend(Symbol(), OP_SELL, lotSize, Bid, 0, bar1High + 4 * Point, Bid - b4 * Point,"comment", 22);

            if (sell1)
            {
                sellStopOrderSent = false;
                buyStopOrderSent = false;
            }
            else
            {}
          
        }
    }


void OnTick()
{
   int ordersTotal = OrdersTotal();
    hasPosition = false;

    for (int i = 0; i < ordersTotal; i++)
    {
        if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
        {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL)
            {
                hasPosition = true;
                break;
            }
        }
    }

    if (OrderType() == OP_BUY && OrderMagicNumber() == 11 && !sellStopOrderSent)
    {
        bool sellStop1 = OrderSend(Symbol(), OP_SELLSTOP, lotSize, bar1Low, 3, bar1High + 4 * Point, 0, "comment", 22);
        if (sellStop1)
        {
            sellStopOrderSent = true;
            buyStopOrderSent = false;
        }
        else
        {}
    }

    if (OrderType() == OP_SELL && OrderMagicNumber() == 22 && !buyStopOrderSent)
    {
        bool buyStop1 = OrderSend(Symbol(), OP_BUYSTOP, lotSize, bar1High + 4 * Point, 3, bar1Low, 0, "comment", 11);
        if (buyStop1)
        {
            buyStopOrderSent = true;
            sellStopOrderSent = false;
        }
        else
        {}
    }

    Comment("Previous Candle High (Buy): ", b1, " Previous Candle Low (Buy): ", b2, " Previous Candle Low (Buy): ", b3 ,": ", b4);
}

int init()
{
    ObjectCreate("BuyBtn", OBJ_BUTTON, 0, 0, 0);
    ObjectSetString(0, "BuyBtn", OBJPROP_TEXT, "buy");
    ObjectSetInteger(0, "BuyBtn", OBJPROP_XDISTANCE, 200);
    ObjectSetInteger(0, "BuyBtn", OBJPROP_YDISTANCE, 20);

    ObjectCreate("SellBtn", OBJ_BUTTON, 0, 0, 0);
    ObjectSetString(0, "SellBtn", OBJPROP_TEXT, "sell");
    ObjectSetInteger(0, "SellBtn", OBJPROP_XDISTANCE, 250);
    ObjectSetInteger(0, "SellBtn", OBJPROP_YDISTANCE, 50);

    return (INIT_SUCCEEDED);
}
